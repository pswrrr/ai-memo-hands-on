# .github/workflows/test.yml
# GitHub Actions CI/CD 워크플로우

name: 테스트 자동화

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: 단위 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: 린트 검사
      run: pnpm lint
      
    - name: 단위 테스트 실행
      run: pnpm test:coverage
      
    - name: 커버리지 리포트 업로드
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  e2e-tests:
    name: E2E 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: Playwright 브라우저 설치
      run: npx playwright install --with-deps
      
    - name: 애플리케이션 빌드
      run: pnpm build
      
    - name: E2E 테스트 실행
      run: pnpm test:e2e
      
    - name: 테스트 결과 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  performance-tests:
    name: 성능 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: 애플리케이션 빌드
      run: pnpm build
      
    - name: 성능 테스트 실행
      run: pnpm test:e2e --grep "성능"
      
    - name: Lighthouse CI 실행
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun

  security-tests:
    name: 보안 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: 보안 취약점 검사
      run: pnpm audit
      
    - name: Snyk 보안 검사
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  accessibility-tests:
    name: 접근성 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: Playwright 브라우저 설치
      run: npx playwright install --with-deps
      
    - name: 접근성 테스트 실행
      run: pnpm test:e2e --grep "접근성"
      
    - name: axe-core 접근성 검사
      run: |
        npm install -g @axe-core/cli
        axe http://localhost:3000 --exit

  cross-browser-tests:
    name: 크로스 브라우저 테스트
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: Playwright 브라우저 설치
      run: npx playwright install --with-deps
      
    - name: ${{ matrix.browser }} 테스트 실행
      run: pnpm test:e2e --project=${{ matrix.browser }}

  mobile-tests:
    name: 모바일 테스트
    runs-on: ubuntu-latest
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: pnpm 설치
      run: npm install -g pnpm
      
    - name: 의존성 설치
      run: pnpm install
      
    - name: Playwright 브라우저 설치
      run: npx playwright install --with-deps
      
    - name: 모바일 테스트 실행
      run: pnpm test:e2e --project="Mobile Chrome" --project="Mobile Safari"

  test-summary:
    name: 테스트 결과 요약
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, performance-tests, security-tests, accessibility-tests, cross-browser-tests, mobile-tests]
    if: always()
    
    steps:
    - name: 테스트 결과 요약
      run: |
        echo "## 테스트 결과 요약" >> $GITHUB_STEP_SUMMARY
        echo "- 단위 테스트: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- E2E 테스트: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 성능 테스트: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 보안 테스트: ${{ needs.security-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 접근성 테스트: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 크로스 브라우저 테스트: ${{ needs.cross-browser-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 모바일 테스트: ${{ needs.mobile-tests.result }}" >> $GITHUB_STEP_SUMMARY
